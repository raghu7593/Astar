/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ggs;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import main.main;

/**
 *
 * @author RAGHUTEJA
 */
public class ggs extends javax.swing.JFrame {
    Object[][] data = null;
    /**
     * Creates new form ggs
     */
    public ggs() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lnodes = new javax.swing.JLabel();
        nodes = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        nodevalues = new javax.swing.JTable();
        back = new javax.swing.JButton();
        go = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        path = new javax.swing.JTable();
        lnodesexp = new javax.swing.JLabel();
        lnodesol = new javax.swing.JLabel();
        lresult = new javax.swing.JLabel();
        numnodesexp = new javax.swing.JTextField();
        numnodesol = new javax.swing.JTextField();
        result = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lnodes.setText("Enter Number of nodes in Graph : ");

        jLabel1.setText("Enter distances and heuristics : ");

        jButton1.setText("Enter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        nodevalues.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        nodevalues.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(nodevalues);

        back.setText("back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        go.setText("Go");
        go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goActionPerformed(evt);
            }
        });

        path.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Node ID", "g value", "h value", "f value"
            }
        ));
        jScrollPane2.setViewportView(path);

        lnodesexp.setText("Number of Nodes expanded : ");

        lnodesol.setText("Number of Nodes in OpenList : ");

        lresult.setText("Result : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lnodesexp)
                            .addComponent(lnodesol))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numnodesexp)
                            .addComponent(numnodesol)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lresult)
                        .addGap(18, 18, 18)
                        .addComponent(result)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lnodes)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nodes)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addComponent(go, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lnodes)
                            .addComponent(nodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(back)
                            .addComponent(go)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lnodesexp)
                            .addComponent(numnodesexp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lnodesol)
                            .addComponent(numnodesol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lresult)
                            .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int n = Integer.parseInt(nodes.getText());
        String[] columnnames = new String[n+2];
        columnnames[0] = "h";
        columnnames[1] = "";
        for(int i=0; i<n ; i++){
            columnnames[i+2] = "" + (i+1);
        }
        data = (Object[][]) new Object[n][n+2];
        for(int i=0; i<n; i++){
            data[i][1] = i+1;
        }
        nodevalues.setModel(new DefaultTableModel(data,columnnames));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void goActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goActionPerformed
        // TODO add your handling code here:
        int n = Integer.parseInt(nodes.getText());
        int graph[][] = new int[n][n];
        int heuristic[] = new int[n];
        for(int i=0; i<n; i++){
            if(!"".equals((String) nodevalues.getModel().getValueAt(i, 0))) {
                heuristic[i] = Integer.parseInt((String) nodevalues.getModel().getValueAt(i, 0));
            }
            else {
                heuristic[i] = 0;
            }
            for(int j=0; j<n; j++){
                if(!"".equals((String) nodevalues.getModel().getValueAt(i, j+2))){
                    graph[i][j] = Integer.parseInt((String) nodevalues.getModel().getValueAt(i, j+2));
                }
                else {
                    graph[i][j] = -1;
                }
            }
            System.out.println();
            graph[i][i] = 0;
        }
        ggs_main main;
        main = new ggs_main(n,graph,heuristic);
        String output = main.run();
        String[] output_temp;
        output_temp = output.split("#");
        result.setText(output_temp[2]);
        numnodesexp.setText(output_temp[1]);
        numnodesol.setText(output_temp[0]);
        
        Object[][] data_local = null;
        String[] columnnames_local = new String[4];
        columnnames_local = new String[] {"Node ID","g value","h value","f value"};
        data = (Object[][]) new Object[(output_temp.length-3)/4][4];
        int j = 0,i = output_temp.length-1;
        while(i >=3) {
            data[j][3] = output_temp[i];i--;
            data[j][2] = output_temp[i];i--;
            data[j][1] = output_temp[i];i--;
            data[j][0] = output_temp[i];i--;
            j++;
        }
        path.setModel(new DefaultTableModel(data,columnnames_local));
    }//GEN-LAST:event_goActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new main().setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ggs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ggs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ggs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ggs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ggs().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton go;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lnodes;
    private javax.swing.JLabel lnodesexp;
    private javax.swing.JLabel lnodesol;
    private javax.swing.JLabel lresult;
    private javax.swing.JTextField nodes;
    private javax.swing.JTable nodevalues;
    private javax.swing.JTextField numnodesexp;
    private javax.swing.JTextField numnodesol;
    private javax.swing.JTable path;
    private javax.swing.JTextField result;
    // End of variables declaration//GEN-END:variables
}
