package puzzle8;

import javax.swing.table.DefaultTableModel;
import main.main;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author RAGHUTEJA
 */
public class puzzle8 extends javax.swing.JFrame {
    Object[][] data = null;
    String[] columnnames = new String[4];
    /**
     * Creates new form puzzle8
     */
    public puzzle8() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Heuristic = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        expnodes = new javax.swing.JTable();
        startnode = new javax.swing.JTextField();
        linitial = new javax.swing.JLabel();
        lfinal = new javax.swing.JLabel();
        goalnode = new javax.swing.JTextField();
        lnumnodes = new javax.swing.JLabel();
        numnodesexp = new javax.swing.JTextField();
        lnodesol = new javax.swing.JLabel();
        numnodesol = new javax.swing.JTextField();
        lresult = new javax.swing.JLabel();
        result = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        sampnode = new javax.swing.JTable();
        lsamp = new javax.swing.JLabel();
        samptext = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        go = new javax.swing.JButton();
        dtiles = new javax.swing.JRadioButton();
        manhattan = new javax.swing.JRadioButton();
        noh = new javax.swing.JRadioButton();
        oeh = new javax.swing.JRadioButton();
        lpprol = new javax.swing.JLabel();
        pprol = new javax.swing.JTextField();
        lpprcl = new javax.swing.JLabel();
        pprcl = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        expnodes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Path", "g value", "h value", "f value"
            }
        ));
        expnodes.setColumnSelectionAllowed(true);
        expnodes.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(expnodes);
        expnodes.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        expnodes.getColumnModel().getColumn(0).setResizable(false);
        expnodes.getColumnModel().getColumn(0).setPreferredWidth(150);
        expnodes.getColumnModel().getColumn(1).setResizable(false);
        expnodes.getColumnModel().getColumn(2).setResizable(false);
        expnodes.getColumnModel().getColumn(3).setResizable(false);

        startnode.setText("1 2 3 4 5 6 7 8 0");
        startnode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startnodeActionPerformed(evt);
            }
        });

        linitial.setText("Enter initial alignment of values :");

        lfinal.setText("Final alignment of values :");

        goalnode.setText("1 2 3 4 5 6 7 8 0 ");
        goalnode.setFocusable(false);

        lnumnodes.setText("Number of nodes expanded : ");

        numnodesexp.setFocusable(false);

        lnodesol.setText("Number of nodes in openlist : ");

        numnodesol.setFocusable(false);

        lresult.setText("Result : ");

        result.setFocusable(false);

        sampnode.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "2", "3"},
                {"4", "5", "6"},
                {"7", "8", null}
            },
            new String [] {
                "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sampnode.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(sampnode);
        sampnode.getColumnModel().getColumn(0).setResizable(false);
        sampnode.getColumnModel().getColumn(1).setResizable(false);
        sampnode.getColumnModel().getColumn(2).setResizable(false);

        lsamp.setText("====>");

        samptext.setText("1 2 3 4 5 6 7 8 0");
        samptext.setFocusable(false);

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        go.setText("Go");
        go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goActionPerformed(evt);
            }
        });

        Heuristic.add(dtiles);
        dtiles.setSelected(true);
        dtiles.setText("Number of displaced tiles");

        Heuristic.add(manhattan);
        manhattan.setText("Manhattan distance");

        Heuristic.add(noh);
        noh.setText("No Heuristic");

        Heuristic.add(oeh);
        oeh.setText("Over estimated Heuristic");

        lpprol.setText("Parent Pointer Redirections in Open List : ");

        pprol.setFocusable(false);

        lpprcl.setText("Parent Pointer Redirections in Closed List : ");

        pprcl.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lpprol)
                        .addGap(18, 18, 18)
                        .addComponent(pprol))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lpprcl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pprcl)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lsamp, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(samptext, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(linitial)
                                        .addComponent(lfinal))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(goalnode)
                                        .addComponent(startnode, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lnumnodes)
                                    .addComponent(lnodesol))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(numnodesexp, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numnodesol, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lresult)
                                .addGap(28, 28, 28)
                                .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(go, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dtiles)
                            .addComponent(noh))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(oeh)
                            .addComponent(manhattan))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lsamp)
                                    .addComponent(samptext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startnode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(linitial))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(goalnode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lfinal))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(manhattan)
                            .addComponent(dtiles))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(noh)
                            .addComponent(oeh))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(back)
                            .addComponent(go))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numnodesexp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lnumnodes)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numnodesol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lnodesol)
                        .addComponent(lpprol)
                        .addComponent(pprol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lresult)
                        .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lpprcl)
                        .addComponent(pprcl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new main().setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void goActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goActionPerformed
        // TODO add your handling code here:
        String initial_ = startnode.getText();
        String final_ = goalnode.getText();
        int h = 0;
        if(manhattan.isSelected()){
            h = 1;
        }
        else if(noh.isSelected()) {
            h = 2;
        }
        else if(oeh.isSelected()){
            h = 3;
        }
        puzzle8_main main = new puzzle8_main(initial_,final_,h);
        String output = main.run();
        String[] output_temp;
        output_temp = output.split("#");
        result.setText(output_temp[4]);
        numnodesexp.setText(output_temp[3]);
        numnodesol.setText(output_temp[2]);
        pprol.setText(output_temp[1]);
        pprcl.setText(output_temp[0]);
        
        columnnames = new String[] {"Path","g value","h value","f value"};
        data = (Object[][]) new Object[(output_temp.length-5)/4][4];
        int j = 0,i = output_temp.length-1;
        while(i >=5) {
            data[j][3] = output_temp[i];i--;
            data[j][2] = output_temp[i];i--;
            data[j][1] = output_temp[i];i--;
            data[j][0] = output_temp[i];i--;
            j++;
        }
        expnodes.setModel(new DefaultTableModel(data,columnnames));
    }//GEN-LAST:event_goActionPerformed

    private void startnodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startnodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startnodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(puzzle8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(puzzle8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(puzzle8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(puzzle8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new puzzle8().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Heuristic;
    private javax.swing.JButton back;
    private javax.swing.JRadioButton dtiles;
    private javax.swing.JTable expnodes;
    private javax.swing.JButton go;
    private javax.swing.JTextField goalnode;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lfinal;
    private javax.swing.JLabel linitial;
    private javax.swing.JLabel lnodesol;
    private javax.swing.JLabel lnumnodes;
    private javax.swing.JLabel lpprcl;
    private javax.swing.JLabel lpprol;
    private javax.swing.JLabel lresult;
    private javax.swing.JLabel lsamp;
    private javax.swing.JRadioButton manhattan;
    private javax.swing.JRadioButton noh;
    private javax.swing.JTextField numnodesexp;
    private javax.swing.JTextField numnodesol;
    private javax.swing.JRadioButton oeh;
    private javax.swing.JTextField pprcl;
    private javax.swing.JTextField pprol;
    private javax.swing.JTextField result;
    private javax.swing.JTable sampnode;
    private javax.swing.JTextField samptext;
    private javax.swing.JTextField startnode;
    // End of variables declaration//GEN-END:variables
}
